@model List<pokedex.Models.Pokemon>

<div class="container mt-5 pokedex-container">

    <!-- T√≠tulo estilo Pok√©dex -->
    <div class="pokedex-header text-center mb-4">
        <h1 class="text-light fw-bold">Pok√©dex</h1>
        <div class="lights">
            <span class="light red"></span>
            <span class="light yellow"></span>
            <span class="light green"></span>
        </div>
    </div>

    <!-- Pesquisa -->
    <div class="row mb-4">
        <div class="col-12">
            <form asp-controller="Pokedex" asp-action="SearchPokemonsType" method="get" class="d-flex search-box">
                <input type="text" name="type" class="form-control me-2" placeholder="Digite o tipo do Pok√©mon" />
                <button type="submit" class="btn btn-danger">üîç Buscar</button>
            </form>
        </div>
    </div>

    @if (Model != null && Model.Count > 0)
    {
        <div class="carousel-container position-relative">
            <button class="carousel-btn prev btn btn-danger">‚óÄ</button>
            <div class="carousel-track-wrapper overflow-hidden">
                <div class="carousel-track d-flex">
                    @foreach(var pokemon in Model)
                    {
                        <div class="pokemon-card text-center mx-2">
                            <div class="pokemon-frame">
                                <img src="@pokemon.Sprite" alt="@pokemon.Name" class="pokemon-img" />
                            </div>
                            <h5 class="text-capitalize mt-2">@pokemon.Name (#@pokemon.Id)</h5>
                            @* <p class="pokemon-types">@string.Join(", ", pokemon.Types)</p> *@
                            <!-- Form para Details -->
                            <form asp-controller="Pokedex" asp-action="Search" method="post">
                                <input type="hidden" name="name" value="@pokemon.Name" />
                                <button type="submit" class="btn btn-primary mt-2">Details</button>
                            </form>
                        </div>
                    }
                </div>
            </div>
            <button class="carousel-btn next btn btn-danger">‚ñ∂</button>
        </div>

        <!-- Pagina√ß√£o -->
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item @(ViewBag.Page <= 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("SearchPokemonsType", new { type = ViewBag.Type, page = ViewBag.Page - 1 })">Anterior</a>
                </li>

                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <text>
                        <li class="page-item @(ViewBag.Page == i ? "active" : "")">
                            <a class="page-link" href="@Url.Action("SearchPokemonsType", new { type = ViewBag.Type, page = i })">@i</a>
                        </li>
                    </text>
                }

                <li class="page-item @(ViewBag.Page >= ViewBag.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("SearchPokemonsType", new { type = ViewBag.Type, page = ViewBag.Page + 1 })">Pr√≥ximo</a>
                </li>
            </ul>
        </nav>
    }
</div>

<style>
/* Container estilo Pok√©dex */
.pokedex-container {
    background: linear-gradient(145deg, #c62828, #b71c1c);
    border: 8px solid #212121;
    border-radius: 20px;
    padding: 20px;
    box-shadow: 6px 6px 0 #000;
}

/* Cabe√ßalho Pok√©dex */
.pokedex-header {
    background: #212121;
    padding: 10px;
    border-radius: 12px;
    position: relative;
}
.pokedex-header .lights {
    position: absolute;
    top: 10px;
    right: 15px;
}
.pokedex-header .light {
    width: 15px;
    height: 15px;
    display: inline-block;
    margin-left: 5px;
    border-radius: 50%;
}
.pokedex-header .light.red { background: #ff1744; }
.pokedex-header .light.yellow { background: #ffeb3b; }
.pokedex-header .light.green { background: #00e676; }

/* Campo de pesquisa */
.search-box input {
    border: 2px solid #000;
    border-radius: 8px;
}

/* Carrossel */
.carousel-container {
    position: relative;
    width: 100%;
    margin-top: 40px;
}
.carousel-track-wrapper {
    overflow: hidden;
    width: 100%;
}
.carousel-track {
    display: flex;
    transition: transform 0.5s ease;
}

/* Cart√£o do Pok√©mon */
.pokemon-card {
    flex: 0 0 180px;
    background: #f5f5f5;
    border: 3px solid #212121;
    border-radius: 15px;
    padding: 10px;
    transition: transform 0.3s ease;
    cursor: pointer;
    box-shadow: 4px 4px 0 #000;
}
.pokemon-card:hover {
    transform: scale(1.05);
}
.pokemon-frame {
    background: #000;
    border: 3px inset #444;
    border-radius: 10px;
    padding: 10px;
}
.pokemon-img {
    width: 100px;
    height: 100px;
}
.pokemon-types {
    font-size: 0.9rem;
    color: #555;
}

/* Bot√µes carrossel */
.carousel-btn {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 5;
    font-size: 1.5rem;
    border-radius: 50%;
    padding: 10px 15px;
}
.carousel-btn.prev { left: -40px; }
.carousel-btn.next { right: -40px; }

/* Pagina√ß√£o */
.pagination .page-link {
    border: 2px solid #212121;
    color: #212121;
    font-weight: bold;
}
.pagination .active .page-link {
    background: #212121;
    color: #fff;
}
</style>

<script>
let track = document.querySelector('.carousel-track');
let cards = document.querySelectorAll('.pokemon-card');
let index = 0;

function updateActive() {
    cards.forEach((card, i) => card.classList.remove('active'));
    if(cards[index]) cards[index].classList.add('active');

    let trackWidth = track.getBoundingClientRect().width;
    let cardWidth = cards[0].offsetWidth + 16;
    let offset = index * cardWidth - (trackWidth / 2 - cardWidth / 2);
    track.style.transform = `translateX(${-offset}px)`;
}

updateActive();

document.querySelector('.carousel-btn.next').addEventListener('click', () => {
    if(index < cards.length - 1) index++;
    updateActive();
});
document.querySelector('.carousel-btn.prev').addEventListener('click', () => {
    if(index > 0) index--;
    updateActive();
});
</script>


